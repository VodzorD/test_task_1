---

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Set vm.max_map_count in sysctl.conf
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: 262144
    state: present

- name: Set open files limit in sysctl.conf
  ansible.posix.sysctl:
    name: fs.file-max
    value: 65536
    state: present

#   name: Hosts | populate inventory into hosts file
#     ansible.builtin.blockinfile:
#       dest: /etc/hosts
#       block: |-
#         {% for item in groups['os-cluster'] %}
#         {{ hostvars[item]['ip'] }} {{ item }}.{{ domain_name }} {{ item }}
#         {% endfor %}
#       state: present
#       create: true
#       backup: true
#       marker: "# Ansible inventory hosts {mark}"
#     when: populate_inventory_to_hosts_file

- name: Include opensearch installation
  ansible.builtin.import_tasks: opensearch.yml

- name: Include security plugin for opensearch
  ansible.builtin.import_tasks: security.yml

- name: Remove `cluster.initial_master_nodes` setting from configuration
  ansible.builtin.command: sed -i '/cluster.initial_master_nodes/d' "{{ os_conf_dir }}/opensearch.yml"

- name: Make sure opensearch is started
  ansible.builtin.service:
    name: opensearch
    state: started
    enabled: true

- name: Get all the installed ES plugins
  ansible.builtin.command: "{{ os_plugin_bin_path }} list"
  register: list_plugins

- name: Show all the installed ES plugins
  ansible.builtin.debug:
    msg: "{{ list_plugins.stdout }}"

- name: Wait for opensearch to startup
  ansible.builtin.wait_for:
    host: "{{ hostvars[inventory_hostname]['ip'] }}"
    port: "{{ os_api_port }}"
    delay: 50
    connect_timeout: 10
    timeout: 180

- name: Check the opensearch status
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}:9200/_cluster/health?pretty"
    user: admin
    password: "{{ admin_password }}"
    validate_certs: false
  register: os_status

- name: Show the opensearch status
  debug:
    msg: "{{ os_status.json }}"
  failed_when: "'number_of_nodes' not in os_status.json"

- name: Verify the roles of opensearch cluster nodes
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}:9200/_cat/nodes?v"
    user: admin
    password: "{{ admin_password }}"
    validate_certs: false
  register: os_roles
  run_once: true

- name: Show the roles of opensearch cluster nodes
  debug:
    msg: "{{ os_roles }}"
  run_once: true